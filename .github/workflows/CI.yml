name: CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'LayoutEngine/publish/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'LayoutEngine/publish/**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            runtime: win10-x64
          - os: ubuntu-latest
            runtime: linux-x64
    
    env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        # select a 'version' from an SDK from https://dotnetcli.blob.core.windows.net/dotnet/release-metadata/6.0/releases.json
        dotnet-version: 6.0.100-rc.2.21505.57
        include-prerelease: true
    - name: Ensure latest chrome version is installed (docker image can be out-of-date) (Linux)
      if: ${{ matrix.runtime == 'linux-x64' }} 
      run: |
          sudo apt install ./installers/google-chrome-stable_current_amd64.deb
          google-chrome --version
    - name: Ensure latest chrome version is installed (docker image can be out-of-date) (Windows)
      if: ${{ matrix.runtime == 'win10-x64' }} 
      run: |
          installers\ChromeStandaloneSetup64.exe /silent /install                          # from https://www.google.com/intl/en/chrome/?standalone=1
          (Get-Item "C:\Program Files\Google\Chrome\Application\chrome.exe").VersionInfo   # print version
    - name: build
      run: dotnet build LayoutEngine/LayoutEngine.csproj --configuration CI --runtime ${{ matrix.runtime }} --self-contained
    - name: chmod artifact executable
      if: ${{ matrix.runtime == 'linux-x64' }} 
      run: sudo chmod +xwr './LayoutEngine/publish/LayoutEngine'
    - name: build test
      run: dotnet build LayoutEngine.Tests/LayoutEngine.Tests.csproj --configuration CI --runtime ${{ matrix.runtime }} --self-contained
    - name: test
      run: dotnet test --configuration CI --runtime ${{ matrix.runtime }}
      timeout-minutes: 5
